>>>sql connection:duckdb
copy (
	with
	crew as (
		select
			tconst,
			{ 'directors': str_split(directors,',')  ,
				'writers' : str_split(writers,',')
			} as crew
		from read_csv_auto('data/title.crew.tsv.gz', delim='\t', quote='',header=True)
	),
	ratings as (
		SELECT tconst, ROW(averageRating, numVotes) as ratings
		FROM read_csv_auto('data/title.ratings.tsv.gz', delim='\t', quote='',header=True) as r
	),
	titles as (
		select title.tconst, isAdult, originalTitle, primaryTitle,
		str_split(genres,',') as genres,
		case WHEN regexp_matches(startYear,'[0-9]+') THEN CAST(startYear as integer) END as startYear,
		case WHEN regexp_matches(endYear,'[0-9]+') THEN CAST(endYear as integer) END as endYear,
		case WHEN regexp_matches(runtimeMinutes,'[0-9]+') THEN CAST(runtimeMinutes as integer) END as runtimeMinutes,
		crew.crew,
		ratings.ratings,
		FROM read_csv_auto('data/title.basics.tsv.gz', delim='\t', quote='',header=True, all_varchar=true) as title
		LEFT JOIN crew on title.tconst = crew.tconst
		LEFT JOIN ratings on title.tconst = ratings.tconst
		WHERE ratings.numVotes > 30000
	)
	select * from titles
) to 'data/titles.parquet' (FORMAT 'parquet', CODEC 'ZSTD')

>>>sql connection:duckdb
copy (
	SELECT
		p.tconst, ordering, nconst, category, job,
		str_split(
			regexp_replace(characters,'[\[\]\"]','','g'),
			',') as characters
	FROM read_csv_auto('data/title.principals.tsv.gz', delim='\t', quote='',header=True) as p
	INNER JOIN 'titles.parquet' as t ON t.tconst = p.tconst
) to 'data/principals.parquet' (FORMAT 'parquet', CODEC 'ZSTD')

>>>sql connection:duckdb
copy (
  SELECT
    n.nconst,
    n.primaryName,
    n.primaryProfession,
    case WHEN regexp_matches(birthYear,'[0-9]+') THEN CAST(birthYear as integer) END as birthYear,
    case WHEN regexp_matches(deathYear,'[0-9]+') THEN CAST(deathYear as integer) END as deathYear,
  FROM read_csv_auto('data/name.basics.tsv.gz', delim='\t', quote='',header=True, all_varchar=true) as n
  	INNER JOIN 'principals.parquet' as p ON n.nconst = p.nconst
  GROUP BY 1,2,3,4,5
) to 'data/names.parquet' (FORMAT 'parquet', CODEC 'ZSTD')
