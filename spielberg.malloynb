[
  {
    "kind": 1,
    "language": "markdown",
    "value": "# Steven Spielberg\nWhat did he direct? When? Who does he commonly work with and on what?",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "malloy",
    "value": "import \"imdb.malloy\"",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Steven Spielberg movies",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "malloy",
    "value": "run:  movies-> by_title mod {\n  where: principals.people.primaryName ~ r'Steven Spielberg'\n  limit: 40\n}",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## People that work with Steven Spielberg ",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "malloy",
    "value": "query: speiberg_movies is movies-> {\n  where: principals.people.primaryName ~ r'Steven Spielberg'\n  group_by: tconst, principals.people.nconst\n}\nrun: movies \n  def {\n    join_one: x is speiberg_movies on x.tconst=tconst\n    where: x.tconst != null\n  }\n  -> by_name mod {\n    where: principals.people.nconst != x.nconst\n    aggregate: `years` is concat(min(startYear)::string, \n        '-', max(startYear)::string)\n    limit: 20\n    order_by: title_count desc\n    nest: by_job_list is with { ... } by_job_category add {..}\n    nest: title_list is by_title\n  }",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "malloy",
    "value": "query: speiberg_movies is movies -> {\n  where: principals.people.primaryName ~ r'Steven Spielberg'\n  group_by: tconst, principals.people.nconst\n}\n\nsource my_movies is movies def {\n\n  query: c is -> {\n    aggregate: title_count is count()\n  }\n\n  query: foo(a) is {aggregate: s.sum() } abstract\n\n  query: a_names is -> by_name mod {\n    where: principals.people.primaryName ~ r'^A'\n  }\n\n  query: spielberge_stuff is \n    def {\n      join_one: x is speiberg_movies on x.tconst=tconst\n      where: x.tconst != null\n    } \n    -> by_name mod {\n      where: principals.people.nconst != x.nconst\n      aggregate: `years` is concat(min(startYear)::string, \n          '-', max(startYear)::string)\n      limit: 20\n      order_by: title_count desc\n      nest: by_job_list is def { ... } -> by_job_category mod {..}\n      nest: title_list is -> foo(x)\n      nest: c\n    }\n}",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Steven Spielberg dashboard",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "malloy",
    "value": "\nquery: speiberg_movies is movies -> {\n  where: principals.people.primaryName ~ r'Steven Spielberg'\n  group_by: tconst\n}\n\nrun: movies with { \n  join_one: x is speiberg_movies with tconst\n  where: x.tconst != null\n}  .titles_dashboard\n  \n",
    "metadata": {}
  }
]